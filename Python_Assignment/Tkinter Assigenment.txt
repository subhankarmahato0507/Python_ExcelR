1. Create Button that contain two option Quit and Hello using tkinter.

Solution:

import tkinter as tk   

def write_text():
    print("Tkinter is easy to create GUI!")

parent = tk.Tk()
frame = tk.Frame(parent)
frame.pack()

text_disp= tk.Button(frame, 
                   text="Hello", 
                   command=write_text
                   )

text_disp.pack(side=tk.LEFT)

Quit_button = tk.Button(frame,
                   text="Quit",
                   fg="green",
                   command=quit)
Quit_button.pack(side=tk.RIGHT)

parent.mainloop()




2.Create Simple Menu with sub options.

File -->New , Open , Exit 

Help

Solution:


import tkinter as tk
from tkinter import messagebox

# Function to handle the "New" option
def new_file():
    messagebox.showinfo("New File", "Creating a new file...")

# Function to handle the "Open" option
def open_file():
    messagebox.showinfo("Open File", "Opening a file...")

# Function to handle the "Exit" option
def exit_app():
    if messagebox.askokcancel("Exit", "Are you sure you want to exit?"):
        root.destroy()

# Create the main window
root = tk.Tk()
root.title("Simple Menu Example")

# Create a menu bar
menubar = tk.Menu(root)
root.config(menu=menubar)

# Create a "File" menu with sub-options
file_menu = tk.Menu(menubar, tearoff=0)
file_menu.add_command(label="New", command=new_file)
file_menu.add_command(label="Open", command=open_file)
file_menu.add_separator()
file_menu.add_command(label="Exit", command=exit_app)
menubar.add_cascade(label="File", menu=file_menu)

# Create a "Help" menu
help_menu = tk.Menu(menubar, tearoff=0)
help_menu.add_command(label="About")
menubar.add_cascade(label="Help", menu=help_menu)

# Start the Tkinter event loop
root.mainloop()






3.Create GUI for loan calculater. With necessory fields.


Solution:



import tkinter as tk
from tkinter import ttk, messagebox

def calculate_loan():
    try:
        principal = float(principal_entry.get())
        interest_rate = float(interest_rate_entry.get()) / 100
        years = int(years_entry.get())

        # Calculate monthly payment
        monthly_interest_rate = interest_rate / 12
        num_payments = years * 12
        monthly_payment = (principal * monthly_interest_rate) / (1 - (1 + monthly_interest_rate) ** -num_payments)

        # Update result label
        result_label.config(text=f"Monthly Payment: ${monthly_payment:.2f}")
    except ValueError:
        messagebox.showerror("Error", "Please enter valid numeric values.")

# Create the main window
root = tk.Tk()
root.title("Loan Calculator")

# Create labels and entry fields
principal_label = ttk.Label(root, text="Loan Principal:")
principal_label.grid(row=0, column=0, padx=5, pady=5, sticky="e")
principal_entry = ttk.Entry(root)
principal_entry.grid(row=0, column=1, padx=5, pady=5)

interest_rate_label = ttk.Label(root, text="Interest Rate (%):")
interest_rate_label.grid(row=1, column=0, padx=5, pady=5, sticky="e")
interest_rate_entry = ttk.Entry(root)
interest_rate_entry.grid(row=1, column=1, padx=5, pady=5)

years_label = ttk.Label(root, text="Number of Years:")
years_label.grid(row=2, column=0, padx=5, pady=5, sticky="e")
years_entry = ttk.Entry(root)
years_entry.grid(row=2, column=1, padx=5, pady=5)

result_label = ttk.Label(root, text="")
result_label.grid(row=3, column=0, columnspan=2, padx=5, pady=5)

# Create calculate button
calculate_button = ttk.Button(root, text="Calculate", command=calculate_loan)
calculate_button.grid(row=4, column=0, columnspan=2, padx=5, pady=5)

# Start the Tkinter event loop
root.mainloop()

